<!--
  ~ Copyright 2000-2008 JetBrains s.r.o.
  ~
  ~ Licensed under the Apache License, Version 2.0 (the "License");
  ~ you may not use this file except in compliance with the License.
  ~ You may obtain a copy of the License at
  ~
  ~ http://www.apache.org/licenses/LICENSE-2.0
  ~
  ~ Unless required by applicable law or agreed to in writing, software
  ~ distributed under the License is distributed on an "AS IS" BASIS,
  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  ~ See the License for the specific language governing permissions and
  ~ limitations under the License.
  -->

<idea-plugin version="2">
	<id>org.jetbrains.plugins.ruby</id>
	<name>Ruby</name>
	<version>1.0</version>
	<description>The Ruby plug-in makes IntelliJ IDEA the smart Ruby and Ruby on Rails editor, ideal for the full cycle application development.</description>
	<vendor>JetBrains</vendor>
	<resource-bundle xmlns="">org.jetbrains.plugins.ruby.RBundle</resource-bundle>
	<depends>com.intellij.xml</depends>
	<depends>org.consulo.java</depends>

	<depends optional="true" config-file="ruby-javascript-integration.xml">JavaScript</depends>

	<extensions defaultExtensionNs="com.intellij">

		<fileTypeFactory implementation="org.jetbrains.plugins.ruby.RFileTypesLoader"/>
		<gotoClassContributor implementation="org.jetbrains.plugins.ruby.ruby.gotoByName.RubyClassAndModuleContributor"/>
		<gotoSymbolContributor implementation="org.jetbrains.plugins.ruby.ruby.gotoByName.RubySymbolContributor"/>
		<colorSettingsPage implementation="org.jetbrains.plugins.ruby.ruby.lang.highlighter.RubyColorsPage"/>
		<colorSettingsPage implementation="org.jetbrains.plugins.ruby.rails.langs.rhtml.lang.highlighting.RHTMLColorsPage"/>
		<applicationService serviceInterface="org.jetbrains.plugins.ruby.rails.actions.shortcuts.RubyShortcutsSettings" serviceImplementation="org.jetbrains.plugins.ruby.rails.actions.shortcuts.RubyShortcutsSettings"/>
		<applicationService serviceInterface="org.jetbrains.plugins.ruby.settings.RApplicationSettings" serviceImplementation="org.jetbrains.plugins.ruby.settings.RApplicationSettings"/>
		<applicationService serviceInterface="org.jetbrains.plugins.ruby.rails.facet.RailsApplicationSettings" serviceImplementation="org.jetbrains.plugins.ruby.rails.facet.RailsApplicationSettings"/>
		<projectService serviceInterface="org.jetbrains.plugins.ruby.settings.RProjectSettings" serviceImplementation="org.jetbrains.plugins.ruby.settings.RProjectSettings"/>
		<moduleService serviceInterface="org.jetbrains.plugins.ruby.settings.RModuleSettingsStorage" serviceImplementation="org.jetbrains.plugins.ruby.settings.RModuleSettingsStorage"/>
		<xmlStructureViewElementProvider implementation="org.jetbrains.plugins.ruby.rails.langs.rhtml.lang.structureView.impl.xml.RHTMLStructureViewElementProvider"/>
		<iconProvider implementation="org.jetbrains.plugins.ruby.RubyIconProvider"/>

		<consoleFilterProvider implementation="org.jetbrains.plugins.ruby.ruby.run.filters.RConsoleFiltersProvider"/>
		<createFromTemplateActionReplacer implementation="org.jetbrains.plugins.ruby.rails.actions.templates.RailsCreateFromTemplateActionReplacer"/>
		<usageTypeProvider implementation="org.jetbrains.plugins.ruby.ruby.lang.findUsages.RubyUsageTypeProvider"/>

		<applicationService serviceInterface="org.jetbrains.plugins.ruby.ruby.codeInsight.paramDefs.ParamDefManager" serviceImplementation="org.jetbrains.plugins.ruby.ruby.codeInsight.paramDefs.ParamDefManager"/>

		<!--TODO: Uncomment when IDEA API will be fixed -->
		<!--<wizardMode implementation="org.jetbrains.plugins.ruby.ruby.module.wizard.modes.CreateRORFromSourcesMode"/>-->

		<frameworkSupport implementation="org.jetbrains.plugins.ruby.jruby.facet.JRubyFacetProvider"/>
		<frameworkSupport implementation="org.jetbrains.plugins.ruby.rails.facet.versions.JRailsFacetSupportProvider"/>
		<frameworkSupport implementation="org.jetbrains.plugins.ruby.rails.facet.versions.RailsFacetSupportProvider"/>

		<referencesSearch implementation="org.jetbrains.plugins.ruby.ruby.lang.search.RubyTextReferenceSearch"/>
		<methodReferencesSearch implementation="org.jetbrains.plugins.ruby.jruby.search.JRubyNamesReferenceSearcher"/>
		<methodReferencesSearch implementation="org.jetbrains.plugins.ruby.jruby.search.JRubyTextRefSearcher"/>

		<!--<overridingMethodsSearch implementation="org.jetbrains.plugins.ruby.jruby.search.JRubyOverridingMethodsSearch"/>-->
		<!--<definitionsSearch implementation="org.jetbrains.plugins.ruby.jruby.search.JRubyImplementingMethodsSearch"/>-->

		<!-- Run Configurationls: -->
		<!-- Common Ruby -->
		<configurationProducer implementation="org.jetbrains.plugins.ruby.ruby.run.confuguration.tests.RubyRunConfigurationProducer"/>
		<!-- Rails -->
		<configurationProducer implementation="org.jetbrains.plugins.ruby.rails.run.configuration.RailsRunConfigurationProducer"/>
		<!-- RSpec -->
		<configurationProducer implementation="org.jetbrains.plugins.ruby.addins.rspec.run.configuration.RSpecConfigurationProducer"/>
		<!-- YAML -->
		<colorSettingsPage implementation="org.jetbrains.plugins.ruby.rails.langs.yaml.YAMLColorsPage"/>

		<!-- RSpec Support -->
		<applicationService serviceInterface="org.jetbrains.plugins.ruby.addins.rspec.RSpecApplicationSettings" serviceImplementation="org.jetbrains.plugins.ruby.addins.rspec.RSpecApplicationSettings"/>
		<moduleService serviceInterface="org.jetbrains.plugins.ruby.rails.module.view.RailsViewFoldersManager" serviceImplementation="org.jetbrains.plugins.ruby.rails.module.view.RailsViewFoldersManager"/>
		<moduleService serviceInterface="org.jetbrains.plugins.ruby.addins.rspec.RSpecModuleSettingsStorage" serviceImplementation="org.jetbrains.plugins.ruby.addins.rspec.RSpecModuleSettingsStorage"/>

		<!--Converting-->
		<project.converterFactory implementation="org.jetbrains.plugins.ruby.rails.facet.converting.RailsModule_ConverterFactory"/>

		<lang.parserDefinition language="RHTML" implementationClass="org.jetbrains.plugins.ruby.rails.langs.rhtml.lang.parsing.parser.RHTMLPaserDefinition"/>

		<declarationRangeHandler implementationClass="org.jetbrains.plugins.ruby.ruby.lang.RubyDeclarationRangeHandler"/>
	</extensions>

	<application-components>
		<component>
			<implementation-class>org.jetbrains.plugins.ruby.ruby.lang.RubySupportLoader</implementation-class>
		</component>
		<component>
			<implementation-class>org.jetbrains.plugins.ruby.rails.langs.rhtml.codeInsight.completion.html.RHTMLFileNSInfoProviderImpl</implementation-class>
		</component>
		<component>
			<implementation-class>org.jetbrains.plugins.ruby.ruby.sdk.RubySdkType</implementation-class>
		</component>
		<component>
			<implementation-class>org.jetbrains.plugins.ruby.ruby.templates.RubyTemplatesLoader</implementation-class>
		</component>
		<component>
			<implementation-class>org.jetbrains.plugins.ruby.rails.RailsSupportLoader</implementation-class>
		</component>
		<component>
			<implementation-class>org.jetbrains.plugins.ruby.settings.RSettings</implementation-class>
		</component>
		<component>
			<implementation-class>org.jetbrains.plugins.ruby.rails.langs.rhtml.RHTMLApplicationComponent</implementation-class>
		</component>
		<component>
			<implementation-class>org.jetbrains.plugins.ruby.RubyIconProvider</implementation-class>
		</component>
		<component>
			<implementation-class>org.jetbrains.plugins.ruby.ruby.sdk.jruby.JRubySdkType</implementation-class>
		</component>
		<component>
			<implementation-class>org.jetbrains.plugins.ruby.rails.templates.RailsTemplatesLoader</implementation-class>
		</component>
		<component>
			<implementation-class>org.jetbrains.plugins.ruby.jruby.JRubySupportLoader</implementation-class>
		</component>

		<component>
			<implementation-class>org.jetbrains.plugins.ruby.ruby.module.RubyModuleType</implementation-class>
		</component>
		<component>
			<implementation-class>org.jetbrains.plugins.ruby.ruby.lang.findUsages.RubyUsagesGroupingRuleProvider
			</implementation-class>
		</component>

		<component>
			<implementation-class>org.jetbrains.plugins.ruby.ruby.run.confuguration.RubyRunConfigurationType</implementation-class>
		</component>

		<!-- Rails Support -->
		<component>
			<implementation-class>org.jetbrains.plugins.ruby.rails.run.configuration.RailsRunConfigurationType</implementation-class>
		</component>

		<!-- RSpec Support -->
		<component>
			<implementation-class>org.jetbrains.plugins.ruby.addins.rspec.RSpecSupportLoader</implementation-class>
		</component>
		<component>
			<implementation-class>org.jetbrains.plugins.ruby.addins.rspec.run.configuration.RSpecRunConfigurationType</implementation-class>
		</component>
		<component>
			<implementation-class>org.jetbrains.plugins.ruby.jruby.JRubySdkTableListener</implementation-class>
		</component>
	</application-components>

	<project-components>

		<component>
			<implementation-class>org.jetbrains.plugins.ruby.ruby.pom.impl.RubyPomAspectImpl</implementation-class>
		</component>
		<component>
			<implementation-class>org.jetbrains.plugins.ruby.ruby.actions.intention.RubyIntentionActionsManager</implementation-class>
		</component>
		<component>
			<implementation-class>org.jetbrains.plugins.ruby.ruby.ri.RubyDocManager</implementation-class>
		</component>
		<component>
			<implementation-class>org.jetbrains.plugins.ruby.ruby.ri.RDocSettings</implementation-class>
			<option name="workspace" value="true"/>
			<skipForDummyProject/>
		</component>
		<component>
			<implementation-class>org.jetbrains.plugins.ruby.ruby.cache.RubySdkCachesManager</implementation-class>
		</component>
		<component>
			<implementation-class>org.jetbrains.plugins.ruby.rails.highlighter.codeHighlighting.RailsHighlightPassFactory</implementation-class>
		</component>
		<component>
			<implementation-class>org.jetbrains.plugins.ruby.ruby.codeInsight.symbols.cache.SymbolsCache</implementation-class>
		</component>
		<component>
			<implementation-class>org.jetbrains.plugins.ruby.ruby.lang.highlighter.codeHighlighting.range.RubyRangeHighlightPassFactory</implementation-class>
		</component>
		<component>
			<implementation-class>org.jetbrains.plugins.ruby.ruby.lang.highlighter.codeHighlighting.line.RubySlowLineHighlightPassFactory</implementation-class>
		</component>
		<component>
			<implementation-class>org.jetbrains.plugins.ruby.ruby.lang.highlighter.codeHighlighting.line.RubyFastLineHighlightPassFactory</implementation-class>
		</component>
		<component>
			<implementation-class>org.jetbrains.plugins.ruby.ruby.roots.RProjectContentRootManager</implementation-class>
		</component>
		<component>
			<implementation-class>org.jetbrains.plugins.ruby.ruby.codeInsight.symbols.LastSymbolStorage
			</implementation-class>
		</component>
		<component>
			<implementation-class>org.jetbrains.plugins.ruby.rails.RailsProjectLoader</implementation-class>
		</component>
		<component>
			<implementation-class>org.jetbrains.plugins.ruby.rails.langs.rhtml.navigation.RHTMLAndRubyBreadcrumbsInfoProvider</implementation-class>
		</component>
		<component>
			<implementation-class>org.jetbrains.plugins.ruby.ruby.projectview.RubyTreeStructureProvider</implementation-class>
		</component>
		<component>
			<implementation-class>org.jetbrains.plugins.ruby.ruby.RubyPsiManager</implementation-class>
		</component>
	</project-components>

	<actions>
		<action id="RIHelpAction" class="org.jetbrains.plugins.ruby.ruby.ri.RIHelpAction" text="RI search" description="Searches a help for selected text using RDoc">
			<keyboard-shortcut keymap="$default" first-keystroke="ctrl I"/>
			<add-to-group group-id="EditorPopupMenu" anchor="last"/>
		</action>

		<action id="org.jetbrains.plugins.ruby.rails.actions.navigation.SwitchToView" class="org.jetbrains.plugins.ruby.rails.actions.navigation.SwitchToView" text="Switch to view" description="Searches view for action in rails controller">
			<keyboard-shortcut keymap="$default" first-keystroke="ctrl alt W"/>
		</action>
		<action id="org.jetbrains.plugins.ruby.rails.actions.navigation.SwitchToAction" class="org.jetbrains.plugins.ruby.rails.actions.navigation.SwitchToAction" text="Switch to action" description="Searches controller action for view">
			<keyboard-shortcut keymap="$default" first-keystroke="ctrl alt A"/>
		</action>
		<action id="org.jetbrains.plugins.ruby.rails.actions.navigation.SwitchToController" class="org.jetbrains.plugins.ruby.rails.actions.navigation.SwitchToController" text="Switch to controller"
				description="Searches controller action for partial view">
			<keyboard-shortcut keymap="$default" first-keystroke="ctrl alt K"/>
		</action>
		<group id="RAILS_POPUP" text="Rails..." description="Group of Rails generators" popup="false">
			<add-to-group group-id="GenerateGroup" anchor="first"/>

			<action id="org.jetbrains.plugins.ruby.rails.actions.generators.actions.special.GenerateActionAction" class="org.jetbrains.plugins.ruby.rails.actions.generators.actions.special.GenerateActionAction" text="Action"
					description="Generates action for controller"></action>
			<separator/>
		</group>
		<group id="GENERATORS_GROUP" class="org.jetbrains.plugins.ruby.rails.actions.generators.actions.GeneratorsActionGroup" popup="false">
			<add-to-group group-id="NewGroup" anchor="first"/>
		</group>
		<group id="RAILS_POPUP_GENERATORS_GROUP" class="org.jetbrains.plugins.ruby.rails.actions.generators.actions.GeneratorsActionGroup" popup="true" text="Generate...">
			<add-to-group group-id="RAILS_POPUP" anchor="last"/>
		</group>
		<group id="RAKE_GROUP" class="org.jetbrains.plugins.ruby.rails.actions.rake.RakeActionGroup" text="Rake" description="Rake actions">
			<add-to-group group-id="RunContextPopupGroup" anchor="last"/>
		</group>

		<group id="ROR_TOOLS" text="ROR Plugin" popup="true">
			<add-to-group group-id="ToolsMenu" anchor="last"/>

			<action id="org.jetbrains.plugins.ruby.rails.actions.generators.ReloadGeneratorsAction" class="org.jetbrains.plugins.ruby.rails.actions.generators.ReloadGeneratorsAction" text="Reload Generators"
					description="Reloads list of available generators"></action>


			<action id="org.jetbrains.plugins.ruby.rails.actions.rake.ReloadRakeTasksAction" class="org.jetbrains.plugins.ruby.rails.actions.rake.ReloadRakeTasksAction" text="Reload Rake tasks"
					description="Reloads list of available rake tasks"></action>

			<separator/>

			<action id="org.jetbrains.plugins.ruby.rails.actions.execution.RunRailsScriptAction" class="org.jetbrains.plugins.ruby.rails.actions.execution.RunRailsScriptAction" text="Run Rails script..."
					description="Runs scripts from ./script folder"></action>
		</group>

		<!--TODO Uncomment to enable:  Intenal Actions -->
		<!--
				<group id="ROR_INTERNAL" text="ROR Plugin(Internal)" popup="true">
					<add-to-group group-id="ToolsMenu" anchor="last"/>

					<action id="RUBY_SHOW_FILE_SYMBOL"
							class="org.jetbrains.plugins.ruby.ruby.codeInsight.symbols.actions.ShowFileSymbolAction"
							text="Show file symbol">
					</action>

					<action id="CLEAR_SYMBOL_CACHES"
							class="org.jetbrains.plugins.ruby.ruby.codeInsight.symbols.actions.ClearSymbolCachesAction"
							text="Clear Symbol caches">
					</action>
					<action id="Error"
							class="org.jetbrains.plugins.ruby.error.ErrorAction"
							text="Test Error">
					</action>
					<separator/>
				</group>
		-->
	</actions>
	<module-components>
		<!--Ruby Module-->
		<component>
			<implementation-class>org.jetbrains.plugins.ruby.ruby.module.RubyModuleSettings</implementation-class>
			<option name="type" value="RUBY_MODULE"/>
		</component>
		<component>
			<implementation-class>org.jetbrains.plugins.ruby.ruby.cache.RubyModuleCachesManager</implementation-class>
			<option name="type" value="RUBY_MODULE"/>
		</component>
		<component>
			<implementation-class>org.jetbrains.plugins.ruby.ruby.roots.RubyModuleContentRootManagerImpl</implementation-class>
			<option name="type" value="RUBY_MODULE"/>
		</component>
		<component>
			<implementation-class>org.jetbrains.plugins.ruby.ruby.module.RModuleConfigurationEditorProvider</implementation-class>
			<option name="type" value="RUBY_MODULE"/>
		</component>
		<component>
			<implementation-class>org.jetbrains.plugins.ruby.RIModuleComponent</implementation-class>
			<option name="type" value="RUBY_MODULE"/>
		</component>

		<!--JRuby Facet-->
		<component>
			<implementation-class>org.jetbrains.plugins.ruby.jruby.facet.JRubyFacetListener</implementation-class>
		</component>

		<!--BaseRails Facet-->
		<component>
			<implementation-class>org.jetbrains.plugins.ruby.rails.facet.BaseRailsFacetListener</implementation-class>
		</component>

		<!-- RSpec Support -->
		<component>
			<implementation-class>org.jetbrains.plugins.ruby.addins.rspec.RSpecModuleSettings</implementation-class>
		</component>
	</module-components>
</idea-plugin>